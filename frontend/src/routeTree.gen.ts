/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerificationRouteImport } from './routes/verification/route'
import { Route as SubmissionsRouteImport } from './routes/submissions/route'
import { Route as SignUpRouteImport } from './routes/sign-up/route'
import { Route as SignInRouteImport } from './routes/sign-in/route'
import { Route as ProfileRouteImport } from './routes/profile/route'
import { Route as ProblemsRouteImport } from './routes/problems/route'
import { Route as LeaderboardRouteImport } from './routes/leaderboard/route'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProblemProblemIdImport } from './routes/problem/$problemId'

// Create/Update Routes

const VerificationRouteRoute = VerificationRouteImport.update({
  path: '/verification',
  getParentRoute: () => rootRoute,
} as any)

const SubmissionsRouteRoute = SubmissionsRouteImport.update({
  path: '/submissions',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRouteRoute = SignUpRouteImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRouteRoute = SignInRouteImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRouteRoute = ProfileRouteImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ProblemsRouteRoute = ProblemsRouteImport.update({
  path: '/problems',
  getParentRoute: () => rootRoute,
} as any)

const LeaderboardRouteRoute = LeaderboardRouteImport.update({
  path: '/leaderboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProblemProblemIdRoute = ProblemProblemIdImport.update({
  path: '/problem/$problemId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/problems': {
      id: '/problems'
      path: '/problems'
      fullPath: '/problems'
      preLoaderRoute: typeof ProblemsRouteImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRoute
    }
    '/submissions': {
      id: '/submissions'
      path: '/submissions'
      fullPath: '/submissions'
      preLoaderRoute: typeof SubmissionsRouteImport
      parentRoute: typeof rootRoute
    }
    '/verification': {
      id: '/verification'
      path: '/verification'
      fullPath: '/verification'
      preLoaderRoute: typeof VerificationRouteImport
      parentRoute: typeof rootRoute
    }
    '/problem/$problemId': {
      id: '/problem/$problemId'
      path: '/problem/$problemId'
      fullPath: '/problem/$problemId'
      preLoaderRoute: typeof ProblemProblemIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardRouteRoute,
  LeaderboardRouteRoute,
  ProblemsRouteRoute,
  ProfileRouteRoute,
  SignInRouteRoute,
  SignUpRouteRoute,
  SubmissionsRouteRoute,
  VerificationRouteRoute,
  ProblemProblemIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/leaderboard",
        "/problems",
        "/profile",
        "/sign-in",
        "/sign-up",
        "/submissions",
        "/verification",
        "/problem/$problemId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx"
    },
    "/leaderboard": {
      "filePath": "leaderboard/route.tsx"
    },
    "/problems": {
      "filePath": "problems/route.tsx"
    },
    "/profile": {
      "filePath": "profile/route.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in/route.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up/route.tsx"
    },
    "/submissions": {
      "filePath": "submissions/route.tsx"
    },
    "/verification": {
      "filePath": "verification/route.tsx"
    },
    "/problem/$problemId": {
      "filePath": "problem/$problemId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
